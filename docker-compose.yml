version: '3.8'
services:

  stockify-app:
    container_name: stockify-app
    image: stockify-app:1
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://stockify-app-mysql:3306/stockify_app?autoReconnect=true&useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_DATA_MONGODB_URI: mongodb://stockify-app-mongodb:27017/stockify_files
      JAVA_OPTS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
    depends_on:
      stockify-app-mysql:
        condition: service_healthy
      stockify-app-mongodb:
        condition: service_healthy

  stockify-app-mysql:
    container_name: stockify-app-mysql
    image: mysql:5.7
    restart: always
    platform: linux/x86_64
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: stockify_app
      MYSQL_USER: stockify
      MYSQL_PASSWORD: stockify
    ports:
      - "3306:3306"
    expose:
      - 3306
    command: [
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_turkish_ci",
      "--innodb_use_native_aio=0",
      "--explicit_defaults_for_timestamp=1"
    ]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot", "--silent"]
      timeout: 10s
      retries: 15
      interval: 10s
      start_period: 60s
    volumes:
      - mysql_data:/var/lib/mysql

  stockify-app-mongodb:
    container_name: stockify-app-mongodb
    image: mongo:7.0
    restart: always
    ports:
      - "27017:27017"
    expose:
      - 27017
    environment:
      MONGO_INITDB_DATABASE: stockify_files
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      timeout: 10s
      retries: 5
      interval: 10s
      start_period: 30s
    volumes:
      - mongodb_data:/data/db

volumes:
  mysql_data:
  mongodb_data:

# docker exec -i stockify-app-mysql mysqladump -u root -p --no-create-info --skip-add-locks --skip-disable-keys --skip-lock-tables --compact stockify_app > src/main/java/com/stockify/project/initialization/dump.sql

# docker build -t stockify-app -f Dockerfile .
# docker ps
# docker images -a
# docker network ls
# docker run --name stockify-app -p 8080:8080 stockify-app
# docker rmi $(docker images -a -q)

##################################
# docker image rm stockify-app:1
# docker-compose up -d
##################################